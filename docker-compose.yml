version: '3.7'
services:

  mongodb:
    image: bitnami/mongodb:4.2.7
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGODB_DATABASE: bookdb
      MONGODB_USERNAME: bookuser
      MONGODB_PASSWORD: bookpass
      MONGODB_ROOT_PASSWORD: secret
    healthcheck:
      test: echo 'db.stats().ok' | mongo localhost:27017/bookdb --quiet
      start_period: 10s

  keycloak:
    image: jboss/keycloak:10.0.2

    # 'my-keycloak' is set as container_name instead of 'keycloak' to avoid the conflict
    # that happens when using gradle-docker-compose plugin (started when integrationTest
    # runs). As far I understood, gradle-docker-compose writes new properties to the
    # containers it runs, for example, my-keycloak.tcp.80. However, the
    # KeycloakSpringBootProperties.java is set to NOT ignore unknown properties. So, if 'keycloak'
    # name is used, the plugin will create keycloak.tcp.80 and an exception will be thrown.
    container_name: my-keycloak

    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      DB_VENDOR: h2
    healthcheck:
      test: "curl -f http://localhost:8080/auth || exit 1"
      start_period: 30s

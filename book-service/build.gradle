plugins {
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'com.palantir.docker' version '0.22.1'
    id 'com.avast.gradle.docker-compose' version '0.9.4'
}

group = 'com.mycompany'
version = '1.0.0'
sourceCompatibility = 1.8

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    integrationTestImplementation {
        extendsFrom testImplementation
    }
    integrationTestRuntime {
        extendsFrom testRuntime
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springfoxSwaggerVersion', '2.9.2')
    set('findbugsVersion', '3.0.2')
    set('mapstructVersion', '1.3.1.Final')
    set('keycloakVersion', '9.0.0')
    set('resteasyVersion', '3.9.0.Final')
}

dependencyManagement {
    imports {
        mavenBom "org.keycloak.bom:keycloak-adapter-bom:${keycloakVersion}"
    }
}

// adding docker plugin

docker {
    dependsOn build
    name "docker.mycompany.com/book-service:${version}"
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}

// adding docker-compose plugin

dockerCompose {
    useComposeFiles = ['../docker-compose.yml']
    startedServices = ['keycloak'] // mongodb is not included because it's provided by 'de.flapdoodle.embed:de.flapdoodle.embed.mongo' dependency
}

// adding integration test

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
//		resources.srcDir file('src/integration-test/resources')
    }
}

idea {
    module {
        testSourceDirs += project.sourceSets.integrationTest.java.srcDirs
//		testSourceDirs += project.sourceSets.integrationTest.resources.srcDirs
    }
}

task integrationTest(type: Test) {
    group 'springboot-testing'
    description 'Runs the integration tests'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath

    useJUnitPlatform()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation "com.google.code.findbugs:jsr305:${findbugsVersion}"

    compileOnly "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    implementation "io.springfox:springfox-swagger2:${springfoxSwaggerVersion}"
    implementation "io.springfox:springfox-swagger-ui:${springfoxSwaggerVersion}"

    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'

    implementation "org.keycloak:keycloak-spring-boot-starter:${keycloakVersion}"

    // -- dependencies needed by keycloak-admin-client during tests
    testImplementation "org.keycloak:keycloak-admin-client:${keycloakVersion}"
    testImplementation "org.jboss.resteasy:resteasy-client:${resteasyVersion}"
    testImplementation "org.jboss.resteasy:resteasy-jackson2-provider:${resteasyVersion}"
    // --

    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    integrationTestAnnotationProcessor 'org.projectlombok:lombok'
    integrationTestCompileOnly 'org.projectlombok:lombok'
}

test {
    useJUnitPlatform()
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

dockerCompose.isRequiredBy(integrationTest)